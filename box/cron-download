cd `dirname $0`
mkdir -p ../dstore/cache
cd ../dstore/cache

STARTTIME=$(date +%s)
echo "Starting Download of all xml files at $(date)" | tee -a time.log

# remove old logs
truncate -s 0 *.curl.last.log

#download all xml files

download() {
declare -a 'a=('"$1"')'
file=${a[4]}
url=${a[5]// /%20}

echo | tee -a ${file}.curl.log ${file}.curl.last.log
date | tee -a ${file}.curl.log ${file}.curl.last.log
echo | tee -a ${file}.curl.log ${file}.curl.last.log

echo "Downloading $file from $url" | tee -a ${file}.curl.log ${file}.curl.last.log
echo | tee -a ${file}.curl.log ${file}.curl.last.log

curl --fail --silent --show-error --retry 4 --retry-delay 10 --speed-time 30 --speed-limit 100 --ciphers 'DEFAULT:!DH' --insecure --location --output ${file} "${url}" 2>&1 | tee -a ${file}.curl.log ${file}.curl.last.log


# try an alternative curl command if there was an error

#if [ $(grep -c error ${file}.curl.last.log) -ge 1 ]; then
#echo | tee -a ${file}.curl.log ${file}.curl.last.log
#echo " retrying with a slightly different curl command " | tee -a ${file}.curl.log ${file}.curl.last.log
#echo | tee -a ${file}.curl.log ${file}.curl.last.log
#curl --user-agent "Mozilla/5.0" --fail --silent --show-error --retry 0 --retry-delay 10 --speed-time 30 --speed-limit 100 --insecure --location --output ${file} "${url}" 2>&1 | tee -a ${file}.curl.log ${file}.curl.last.log
#fi


echo | tee -a ${file}.curl.log ${file}.curl.last.log
}
export -f download
cat ../json/curl.txt | sort -R | parallel -j 64 --bar download


doempty() {

file=$1

if grep -q -c -e "-o $file" ../json/curl.txt ; then

	true

else

	echo "" >$file
	echo "Emptying $file"

fi

}
export -f doempty
ls *.xml | sort -R | parallel --bar doempty


ENDTIME=$(date +%s)
echo "Finished Download of all xml files at $(date)" | tee -a time.log
ls -s *.xml | awk '{sum+=$1;} END {printf("%'"'"'d kilobytes downloaded\n",sum);}' | tee -a time.log
echo "Download took  $(($ENDTIME - $STARTTIME)) seconds to complete." | tee -a time.log
echo "" | tee -a time.log
